/**
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞
 */
const MESSAGES = {
  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–æ–º–∞–Ω–¥—ã
  welcome: "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –ê–ª—å—Ç—Ä–æ–Ω ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.\n\n–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥.",

  help: `üîß **–ú–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏:**

‚ö° \`/start\` ‚Äî –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
‚ö° \`/help\` ‚Äî —Å–ø—Ä–∞–≤–∫–∞

**–î–ª—è –∞–¥–º–∏–Ω–æ–≤ –≥—Ä—É–ø–ø:**

‚ö° \`/register\` ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É –≤ —Å–∏—Å—Ç–µ–º—É
‚ö° \`/unregister\` ‚Äî —É–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É
‚ö° \`/ban @user\` ‚Äî –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚ö° \`/unban @user\` ‚Äî —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
‚ö° \`/mute @user\` ‚Äî –æ—Ç–∫–ª—é—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
‚ö° \`/unmute @user\` ‚Äî –≤–∫–ª—é—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è

**–í –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ:**

‚ö° \`/addAltronKey @group_name API_KEY\` ‚Äî –ø–æ–¥–∫–ª—é—á–∏—Ç—å —á–∞—Ç–±–æ—Ç–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã`,

  // –ö–∞–ø—á–∞
  captcha_welcome: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –†–µ—à–∏—Ç–µ –Ω–µ—Å–ª–æ–∂–Ω—ã–π –ø—Ä–∏–º–µ—Ä:

{question} = ?

–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:`,

  captcha_failed: "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, {name} –≤—ã–±—Ä–∞–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ üò¢",
  captcha_timeout: "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, {name} –Ω–µ –≤—ã–±—Ä–∞–ª –Ω–∏ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ üßê",

  // –°–ø–∞–º
  spam_warning: "–•–º–º... üßê\n{modifier}–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç [{name}] –ø–æ—Ö–æ–∂–µ –Ω–∞ —Å–ø–∞–º.\n\n–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ. \n\n{admin}",
  spam_kick: "–ù—É –≤–æ—Ç... ü§ì\n[{name}] –∏—Å–∫–ª—é—á–µ–Ω –∑–∞ —Å–ø–∞–º.\n\n{admin}",

  // –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  ban_usage: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /ban @username –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ",
  ban_user_not_found: "üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.",
  ban_specify_user: "–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ",
  ban_success: "üîí {username} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
  ban_error: "‚ùå –û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏",

  unban_success: "üîì {username} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
  unban_error: "‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏",

  mute_success: "üîá {username} –æ—Ç–∫–ª—é—á–µ–Ω",
  mute_error: "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è",

  unmute_success: "üîä {username} –≤–∫–ª—é—á–µ–Ω",
  unmute_error: "‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è",

  // API –∫–ª—é—á–∏
  api_key_private_only: "üîê –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ",
  api_key_usage: `üîë **–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ò–ò:**

\`/addAltronKey @chat_username API_KEY\`

‚Ä¢ \`@chat_username\` ‚Äî –∏–º—è –≥—Ä—É–ø–ø—ã
‚Ä¢ \`API_KEY\` ‚Äî –≤–∞—à –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞`,

  api_key_invalid_format: "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã",
  api_key_too_short: "üîë –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∫–ª—é—á",
  api_key_chat_not_found: `üîç –ì—Ä—É–ø–ø–∞ @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ –ì—Ä—É–ø–ø–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ (/register)
‚Ä¢ –ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –≥—Ä—É–ø–ø—ã
‚Ä¢ –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã`,

  api_key_no_permission: `üö´ –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≥—Ä—É–ø–ø—ã @{username}.

–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å –ß–∞—Ç-–±–æ—Ç–∞.`,

  api_key_success: `‚úÖ **–ß–∞—Ç-–±–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω!**

–ù–∞–ø–∏—à–∏—Ç–µ –ë–æ—Ç, –≠–π –±–æ—Ç, –ê–ª—å—Ç—Ä–æ–Ω, –∏–ª–∏ —Ç–µ–≥–Ω–∏—Ç–µ, –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.`,

  api_key_save_error: "üíæ –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ",
  api_key_general_error: "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã",

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≥—Ä—É–ø–ø
  register_groups_only: "üè¢ –ö–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥—Ä—É–ø–ø",
  register_success: "‚úÖ –ì—Ä—É–ø–ø–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º—É",
  register_error: "‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",

  unregister_success: "üóëÔ∏è –ì—Ä—É–ø–ø–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã",
  unregister_error: "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è",

  // –û—à–∏–±–∫–∏ –æ–±—â–∏–µ
  ai_response_error: "ü§ñ –ú–æ–∏ —Å—Ö–µ–º—ã –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ã. –°–µ–∫—É–Ω–¥–æ—á–∫—É...",
  ai_service_error: `üîß –û–ø—è—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –Ω–∞–∫–æ—Å—è—á–∏–ª...

–ú–æ–∏ —Å—Ö–µ–º—ã –Ω—É–∂–¥–∞—é—Ç—Å—è –≤ —Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏.

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`,
  no_admin_permission: "üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
  no_group_admin_permission: "üõ°Ô∏è –ù—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ –≥—Ä—É–ø–ø—ã",
  command_start_error: "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞",
  help_command_error: "üìã –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø—Ä–∞–≤–∫–∏",

  // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  user_restricted: "üö´ **–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω**\n\n–ü—Ä–∏—á–∏–Ω–∞: {reason}\n\n{admin}",

  // Callback –æ—Ç–≤–µ—Ç—ã
  callback_user_error: "üë§ –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
  callback_captcha_unavailable: "üßÆ –ö–∞–ø—á–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞", 
  callback_unknown_command: "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞",
  callback_general_error: "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏",
  callback_invalid_format: "üìã –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö",
  callback_captcha_correct: "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!",
  callback_captcha_wrong: "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ",
  
  // –û–±—â–∏–µ —Ç–µ–∫—Å—Ç—ã
  reason_not_specified: "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
  unknown_user: "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π",
  generic_user: "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
} as const

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
 * @param key - –∫–ª—é—á —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param params - –æ–±—ä–µ–∫—Ç —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
 * @returns –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
export function getMessage(key: keyof typeof MESSAGES, params: Record<string, string | number> = {}): string {
  let message = MESSAGES[key] as string
  
  // –ü—Ä–æ—Å—Ç–∞—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö {variable}
  Object.entries(params).forEach(([paramKey, value]) => {
    const placeholder = `{${paramKey}}`
    message = message.replace(new RegExp(placeholder, 'g'), String(value))
  })
  
  return message
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
 */
export function hasMessage(key: string): key is keyof typeof MESSAGES {
  return key in MESSAGES
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª—é—á–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
 */
export function getMessageKeys(): string[] {
  return Object.keys(MESSAGES)
} 