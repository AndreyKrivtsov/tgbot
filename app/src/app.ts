import { Logger } from "./helpers/Logger.js"
import { config } from "./config.js"
import { Container } from "./core/Container.js"
import { Application } from "./core/Application.js"

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 */
export class App {
  private container: Container
  private application?: Application
  private logger: Logger
  private config: typeof config

  constructor() {
    this.logger = new Logger("App")
    this.container = new Container(this.logger)
    this.config = config
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  private async initialize(): Promise<void> {
    this.logger.i("üîß Initializing application...")

    try {
      // –°–æ–∑–¥–∞–µ–º –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
      this.container.register("logger", this.logger)
      this.container.register("config", this.config)

      // –°–æ–∑–¥–∞–µ–º Application —Å config
      this.application = new Application(this.container, this.logger, this.config)
      
      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
      await this.application.initialize()

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (—Å–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∏ –≤—ã–∑—ã–≤–∞–µ—Ç initialize)
      await this.container.initialize()

      this.logger.i("‚úÖ Application initialized successfully")
    } catch (error) {
      this.logger.e("‚ùå Failed to initialize application:", error)
      throw error
    }
  }

  /**
   * –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  async start(): Promise<void> {
    try {
      this.logger.i("üî• Starting application...")

      if (!this.application) {
        throw new Error("Application not initialized")
      }

      await this.application.start()

      this.logger.i("‚úÖ Application started successfully")
      this.logger.i(`üåç Environment: ${config.NODE_ENV}`)
      this.logger.i(`ü§ñ Bot mode: ${config.BOT_TOKEN ? "enabled" : "disabled"}`)
    }
    catch (error) {
      this.logger.e("‚ùå Failed to start application:", error)
      throw error
    }
  }

  /**
   * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  async stop(): Promise<void> {
    try {
      this.logger.i("üõë Stopping application...")

      if (this.application) {
        await this.application.stop()
      }
      await this.container.dispose()

      this.logger.i("‚úÖ Application stopped successfully")
    }
    catch (error) {
      this.logger.e("‚ùå Error during application shutdown:", error)
      throw error
    }
  }

  /**
   * Graceful shutdown –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
   */
  setupGracefulShutdown(): void {
    const signals = ["SIGINT", "SIGTERM", "SIGQUIT"] as const

    signals.forEach((signal) => {
      process.on(signal, async () => {
        this.logger.i(`üì° Received ${signal}, initiating graceful shutdown...`)

        try {
          await this.stop()
          process.exit(0)
        }
        catch (error) {
          this.logger.e("‚ùå Error during graceful shutdown:", error)
          process.exit(1)
        }
      })
    })

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
    process.on("uncaughtException", (error) => {
      this.logger.e("üí• Uncaught Exception:", error)
      this.stop().finally(() => process.exit(1))
    })

    process.on("unhandledRejection", (reason, promise) => {
      this.logger.e("üí• Unhandled Rejection at:", promise, "reason:", reason)
      this.stop().finally(() => process.exit(1))
    })

    this.logger.i("üõ°Ô∏è Graceful shutdown handlers registered")
  }

  /**
   * –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  async run(): Promise<void> {
    try {
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º graceful shutdown
      this.setupGracefulShutdown()

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
      await this.initialize()
      await this.start()

      this.logger.i("üéâ Application is running!")
    }
    catch (error) {
      this.logger.e("üíÄ Fatal error during application startup:", error)
      await this.stop()
      process.exit(1)
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export async function createApp(): Promise<App> {
  const app = new App()
  return app
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ index.ts
export { App as default } 