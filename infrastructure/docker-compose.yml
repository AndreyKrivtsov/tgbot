services:
  # PostgreSQL - основная база данных
  postgres:
    image: postgres:15-alpine
    container_name: tgbot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tgbot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    command: >
      postgres 
      -c config_file=/etc/postgresql/postgresql.conf
      -c log_statement=all
      -c log_min_duration_statement=1000
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tgbot"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - tgbot-network

  # Redis - кэширование и очереди
  redis:
    image: redis:7-alpine
    container_name: tgbot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - tgbot-network

  # Redis Commander - веб-интерфейс для Redis (опционально)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: tgbot-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - tools
    networks:
      - tgbot-network

  # pgAdmin - веб-интерфейс для PostgreSQL (опционально)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tgbot-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    profiles:
      - tools
    networks:
      - tgbot-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  tgbot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 